java 的编译命令是javac， 例如： test.java编译后生成java.class 其中java平台执行的并不是二进制的文件而是
class类的文件， 编译后生成的test.class文件,直接通过java test 命令就可以执行test
其中java文件编译后生成的文件名是跟类名想通过的而不是文件名字； 

java原文件中， 有多少个类， 在javac 编译后就会形成多少个类的class类型文件， 但是只有含有main方法的class类型文件
才能够运行

java 是通过JVM(java virtual Machine)即是由java虚拟机执行的，java是跨平台的, 但是JVM不是跨平台的，因为
JVM每个平台的安装包不同。

JDK   java 开发工具包
jre   java 运行环境

第一章: 

1. java 的数据类型分为两种：
		1) 原生数据类型，总共有8种 (byte, int, short， char, float, double, boolean, long)
			浮点数，没有后缀的默认是double类型，其中float f = 1.2 会报错可以改为 float f = 1.2f 或者 float f =(float) 1.2
			boolean 类型只能用true和false表示。true != 1, 会提示类型不用
		2) 引用类型(对象类型)

2. 不能将精度类型小的值赋值给精度类型大的变量会报错，只能强制转换类型后在赋值

3. main 方法是java程序的入口点，如果程序中没有main方法程序是无法执行的。

4. 	命名约束：
	1)类:
		 首字母要大写，如果类名由两个单词,那么他们的首字母都要大写，不能使用链接符号。比如：Persion类，MemberTest类
	2)方法:
		首字母要小写，第二个单词的时候要用大写，不能使用链接符号，比如：method , methodTest 
	3)属性:
		规则和方法一样
	
5. 局部变量在定义的使用必须要赋值，因为它是随机生成的，它的值不确定。局部变量是定义在方法中的。

6. 成员变量定义的时候是不比赋值的，因为它的默认值是0，所以可以不用初始化;其中(int shor long byte)的初始值是0
char 的初始值是'\u0000' (java 使用的是unicode编码), boolean的初始值是false；

7. 生成实例对象时，实例共享类的方法， 但是属性是不共享的， 会生成各自的属性。 

8. 构造方法： 用于完成对象的属性初始化 工作， 构造方法的特点： 
	a) 构造方法必须和类的名字一样
	b） 构造方法没有返回值， 没有类型。void类型也不可以
	c） 如果在定义类的时候没有定义构造方法， java编译器会自动为类添加一个没参数且方法体为空的构造方法
	d） 如果定义一个类的时候， 为类声明了构造方法， 那么java编译器就不会在添加默认的构造方法
	e） 不能显示调用类的构造方法, 只能通过new关键字隐式的调用， 或者在继承是通过super调用父类的构造方法
	f） 用new生成对象时， new关键字会为对象开辟一个内存空间， 它会调用类的构造方法， 并将生成的对象的引用地址返回
	
9. 一个源文件只能有一个public类。 

10. 方法的重载： 表示两个或者多个方法的名字是一样的，在参数个数或者类型都不同的情况下其他都可以不同

11、 类中在一个构造方法中调用调用另一个构造方法可以使用this；


12. 继承(inheritance):  
	java只支持单继承， 继承要使用关键字extends。 
	java子类生成对象的时候， 必须先调用父类的构造方法， 只有生成父类了， 才能够生成子类。 (有父才能有子)； 
	在子类生成实例对象时， 首先会调用父类不带参数的构造方法， 如果父类构造方法是带参数的， 必须要super关键字
调用父类的构造方法。  

13. 多态(polymorphism):
	a） 一个类可以有多种形态， 即一个类可以有多个对象。 
	b） 子类的实例对象可以赋值给父类的类型，在调用子类方法或者属性的时候， 先检查父类是否有该属性或者方法， 如果有的话，则可以调用，
	否则报错。
	c） 多态即， 父类可以调用子类的属性和方法， 但是父类比有该属性和方法
	 
14. 抽象类(abstract class): 
		a) 抽象类使用abstract关键字修饰
		b) 抽象类不能够实例化
		c) 抽象类也是可以定义非抽象的方法
		d) 抽象类只能过子类来继承。如果子类非抽象的，则子类必须实现抽象类的所有方法，包括抽象类的父类的父类方法
		
15. 抽象方法(abstract method)：
	a) 使用abstract关键字修饰方法
	b) 抽象方法只声明定义， 没有方法体
	c) 抽象方法只能定义在抽象类中

16. 子类在继承抽象类时， 子类必须要实现抽象类的所有方法， 否则子类必须是抽象类。 

17. 接口(interface): 接口是特殊的抽象类，并且它的所有方法必须都是抽象方法,如果有属性的
话使用final修饰属性，其中他们的修饰都是必须的，所以在声明的时候可以省略abstract和final修饰符。 
	接口是通过类来实现的， 要使用implements表示， 代表某个类实现了某个接口
如果一个类实现了某个接口， 必须要实现接口的所有方法。 

18. java是单继承的， 一个类只能有一个父类， 但是一个却可以实现多个接口,使用逗号将他们分开;

19. 一个类在继承一父类的同时， 也可以实现一个或者多个接口  例子在InterfaceTest.java文件中

20. final关键字： 
		1) final修饰类的时候，表示该类是一个终态，不能够被继承。
		
		2) final修饰属性的时候，表示属性的值不能够改变。即为常量,所以声明的时候必须赋值，有一种特殊
			情况是，声明的时候不赋值，但必须在构造方法里赋值。

		3) final 修饰方法的时候，表示该方法是一个终态，不能够重写(覆写)。
	
21. static 关键字可以在类里定义一个代码块， 例如：
		class Perison{
		      static {
		      		System.out.println("I am static block");
		      }
		}
静态代码块也是执行一下初始化的工作，但是它在JVM加载类的时候，就调用执行了。跟构造方法不同，构造方法是只在new生成对象的时候执行。还有一点，static代码块只会执行一次，因为类只加载一次。

22. 单实例模式(singleton): 表示一个类只能生成一个实例对象,例子在SingletonTest.java中。

在java中"=="比较的是俩个变量的值，是否相等。equals方法要查看它的重写才能去判断，它是根据什么比较的。

23. string pool(字符串池)， 用字面量创建字符串对象时，它会检查字符串池中是否已有该值，如果有则返回该
对象的引用，没有创建新的对象。 new创建字符串的话，new每次都会去申请内存给对象，所以返回的引用是不一样的。

24 instanceof 运算符用于判断，对象是否属于某个类的， 例如： objstring instanceof String

25. java.lang.object类。 java.lang包在使用的时候无需显示的导入，编译器在编译的时候会自动导入。 

26. 包(Package): 用于将不同功能的类，放在不同的目录下。使用Package声明当前文件所在的位置.
	声明的规则是：如果文件所在的目录是zykcome/java-test/test.class, 则可以在文件头部声明，具体的格式为
	Packeage java-test.zykcome跟目录是反过来的，这就声明了test.clas所在的位置，在其他文件引用test.classde的
	时候直接使用import java-test.zykcome.test引用该类。

